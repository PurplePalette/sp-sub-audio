name: ci python-project-template
env:
  PROJECT_NAME: python-project-template
on: [push, pull_request]
jobs:
  deploy:
    name: CI
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v1
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.2.0
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Load cached dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Run Lint
        run: |
          poetry run pysen run lint
      - name: Start minio
        run: |
          cp .env.test .env
          docker-compose up -d minio
          docker-compose up createbuckets
      - name: Run Test
        run: |
          poetry run pytest
